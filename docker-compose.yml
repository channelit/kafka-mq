version: '3.7'
services:

  kafka1:
    image: cithub/kafka
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - "8091:8091"
      - "7091:7091"
    volumes:
      - ./data/kafka1/data:/kafka_data
      - ./conf/server1.properties:/conf/server.properties
      - ./data/kafka1/logs:/kafka_logs
    command: ["./opt/kafka/bin/kafka-server-start.sh", "/conf/server.properties"]
    networks:
      - kafka

  kafka2:
    image: cithub/kafka
    hostname: kafka2
    container_name: kafka2
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - "8092:8092"
      - "7092:7092"
    volumes:
      - ./data/kafka2/data:/kafka_data
      - ./conf/server2.properties:/conf/server.properties
      - ./data/kafka2/logs:/kafka_logs
    command: ["./opt/kafka/bin/kafka-server-start.sh", "/conf/server.properties"]
    networks:
      - kafka

  kafka3:
    image: cithub/kafka
    hostname: kafka3
    container_name: kafka3
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    volumes:
      - ./data/kafka3/data:/kafka_data
      - ./conf/server3.properties:/conf/server.properties
      - ./data/kafka3/logs:/kafka_logs
    ports:
      - "8093:8093"
      - "7093:7093"
    command: ["./opt/kafka/bin/kafka-server-start.sh", "/conf/server.properties"]
    networks:
      - kafka

  zoo1:
    image: cithub/zookeeper
    hostname: zoo1
    container_name: zoo1
    restart: always
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
      - ./data/zoo1/datalog:/datalog
      - ./data/zoo1/data:/data
      - ./data/zoo1/logs:/logs
    networks:
      - kafka

  zoo2:
    image: cithub/zookeeper
    hostname: zoo2
    container_name: zoo2
    restart: always
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    volumes:
      - ./data/zoo2/datalog:/datalog
      - ./data/zoo2/data:/data
      - ./data/zoo2/logs:/logs
    networks:
      - kafka

  zoo3:
    image: cithub/zookeeper
    hostname: zoo3
    container_name: zoo3
    restart: always
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    volumes:
      - ./data/zoo3/datalog:/datalog
      - ./data/zoo3/data:/data
      - ./data/zoo3/logs:/logs
    networks:
      - kafka

  lenses:
    image: landoop/kafka-lenses-dev
    hostname: lenses
    container_name: lenses
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      ADV_HOST: 127.0.0.1
      EULA: https://dl.lenses.stream/d/?id=f6b55fc2-0043-49eb-84eb-65eb4c69ec62
      LICENSE_URL: https://dl.lenses.stream/d/?id=f6b55fc2-0043-49eb-84eb-65eb4c69ec62
      LENSES_PORT: 9991
      LENSES_KAFKA_BROKERS: PLAINTEXT://kafka1:7091,PLAINTEXT://kafka2:7092,PLAINTEXT://kafka3:7093
      LENSES_SECURITY_MODE: BASIC
      LENSES_ZOOKEEPER_HOSTS: |
        [
          {url:"zoo1:2181"},
          {url:"zoo2:2181"},
          {url:"zoo3:2181"}
        ]
      LENSES_SECURITY_GROUPS: |
        [
          {"name": "adminGroup", "roles": ["Admin", "DataPolicyWrite", "AlertsWrite", "TableStorageWrite"]},
          {"name": "readGroup",  "roles": ["Read"]}
        ]
      LENSES_SECURITY_USERS: |
        [
          {"username": "admin", "password": "admin", "displayname": "Lenses Admin", "groups": ["adminGroup"]},
          {"username": "read", "password": "read", "displayname": "Read Only", "groups": ["readGroup"]}
        ]
    ports:
      - 3030:3030
      - 9092:9092
      - 9991:9991
    networks:
      - kafka

  ibmmq:
    image: ibmcom/mq
    hostname: mq
    container_name: mq
    restart: always
    ports:
      - "3302:22"
      - "1414:1414"
      - "9443:9443"
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM
    networks:
      - kafka

networks:
  kafka: